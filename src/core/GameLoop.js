/**
 * –ò–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª - —É–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º —Å—Ü–µ–Ω—ã
 */
export class GameLoop {
    constructor() {
        this.isRunning = false;
        this.lastTime = 0;
        this.targetFPS = 60;
        this.frameTime = 1000 / this.targetFPS;
        this.accumulator = 0;
        this.currentTime = 0;
        
        // –ö–æ–ª–±—ç–∫–∏
        this.updateCallback = null;
        this.renderCallback = null;
        
        // Bind –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è requestAnimationFrame
        this.loop = this.loop.bind(this);
    }

    /**
     * –ó–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞
     * @param {Function} updateCallback - –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏
     * @param {Function} renderCallback - –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
     */
    start(updateCallback, renderCallback) {
        if (this.isRunning) {
            console.warn('–ò–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª —É–∂–µ –∑–∞–ø—É—â–µ–Ω');
            return;
        }

        this.updateCallback = updateCallback;
        this.renderCallback = renderCallback;
        this.isRunning = true;
        this.lastTime = performance.now();
        
        console.log('üéÆ –ò–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª –∑–∞–ø—É—â–µ–Ω');
        requestAnimationFrame(this.loop);
    }

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞
     */
    stop() {
        this.isRunning = false;
        console.log('‚èπÔ∏è –ò–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    /**
     * –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∏–≥—Ä—ã
     * @param {number} timestamp - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
     */
    loop(timestamp) {
        if (!this.isRunning) return;

        this.currentTime = timestamp;
        let deltaTime = this.currentTime - this.lastTime;
        this.lastTime = this.currentTime;

        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ deltaTime –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–æ–ª—å—à–∏—Ö —Å–∫–∞—á–∫–æ–≤
        deltaTime = Math.min(deltaTime, 50); // –º–∞–∫—Å–∏–º—É–º 50ms

        this.accumulator += deltaTime;

        // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —à–∞–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Ñ–∏–∑–∏–∫–∏
        while (this.accumulator >= this.frameTime) {
            if (this.updateCallback) {
                this.updateCallback(this.frameTime / 1000); // –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            }
            this.accumulator -= this.frameTime;
        }

        // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —á–∞—Å—Ç–æ—Ç–æ–π
        if (this.renderCallback) {
            this.renderCallback();
        }

        requestAnimationFrame(this.loop);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π FPS
     * @returns {number} –¢–µ–∫—É—â–∏–π FPS
     */
    getCurrentFPS() {
        return Math.round(1000 / (this.currentTime - this.lastTime));
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª–µ–≤–æ–π FPS
     * @param {number} fps - –¶–µ–ª–µ–≤–æ–π FPS
     */
    setTargetFPS(fps) {
        this.targetFPS = fps;
        this.frameTime = 1000 / this.targetFPS;
    }
} 